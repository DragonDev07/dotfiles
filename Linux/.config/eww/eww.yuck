;; ------ Variables ------ ;;
;; `eww` Binary Path
(defvar eww "/usr/bin/eww")

;; Listeners
(deflisten workspace "scripts/workspaces.sh") ;; Hyprland Workspaces
(deflisten active_window_title "./scripts/active_window.sh") ;; Hyprland Active Window Title
(deflisten notifications "python ~/.config/eww/scripts/notifications.py") ;; Notifications

;; Polls
(defpoll clock_hour :interval "5s" "date +\%I") ;; Hour
(defpoll clock_minute :interval "5s" "date +\%M") ;; Minute
(defpoll clock_date :interval "1m" "date '+%m/%d'") ;; Date
(defpoll calendar_day :interval "1m" "date '+%d'") ;; Calendar Day
(defpoll calendar_year :interval "1h" "date '+%Y'") ;; Calendar Year

(defpoll battery_percent :interval "15s" "./scripts/battery.sh --percent") ;; Battery Percentage
(defpoll battery_status :interval "15s" "./scripts/battery.sh --status") ;; Battery Status
(defpoll battery_icon :interval "15s" "./scripts/battery.sh --icon") ;; Battery Icon

(defpoll memory_percent :interval "15s" "./scripts/memory.sh --percent") ;; Memory Percentage
(defpoll memory_used_mb :interval "30s" "./scripts/memory.sh --used") ;; Memory Used (MB)
(defpoll memory_total_mb :interval "30s" "./scripts/memory.sh --total") ;; Memory Total (MB)
(defpoll memory_free_mb :interval "30s" "./scripts/memory.sh --free") ;; Memory Free (MB)

(defpoll wlan_color :interval "10s" "./scripts/wifi.sh --color") ;; WiFi Color
(defpoll wlan_essid :interval "10s" "./scripts/wifi.sh --essid") ;; WiFi ESSID
(defpoll wlan_icon :interval "10s" "./scripts/wifi.sh --icon") ;; WiFi Icon

(defpoll bluetooth_color :interval "10s" "./scripts/bluetooth.sh --color") ;; Bluetooth Color
(defpoll bluetooth_device :interval "10s" "./scripts/bluetooth.sh --devices") ;; Bluetooth Device
(defpoll bluetooth_icon :interval "10s" "./scripts/bluetooth.sh --icon") ;; Bluetooth Icon

(defpoll volume_percent :interval "0.1s" "./scripts/volume.sh --percent") ;; Volume Percentage
(defpoll volume_icon :interval "0.1s" "./scripts/volume.sh --icon") ;; Volume Icon

(defpoll brightness_percent :interval "0.1s" "brightnessctl -m -d apple-panel-bl | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'") ;; Brightness Percentage

;; Reveals
(defvar clock_reveal false) ;; Clock
(defvar wifi_reveal false) ;; Wifi
(defvar bluetooth_reveal false) ;; Bluetooth
(defvar volume_reveal false) ;; Volume
(defvar brightness_reveal false) ;; Brightness

;; ------ Bar Widget Definitions ------ ;;
;; Separator Widget ;;
(defwidget separator []
  (box :class "module_2" :vexpand "false" :hexpand "false"
    (label :class "separator" :text "|")))

;; Workspaces Widget ;;
(defwidget workspaces []
  (literal :content workspace)
)

;; Window Title Widget ;;
(defwidget window_title []
  (box
      :orientation "h"
      :space-evenly "false"
      :spacing "3"
      :hexpand false
    (label :text "${active_window_title}"
        :limit-width "300"
        :ellpisize "end"
    )
  )
)

;; Brightness Widget ;;
(defwidget brightness []
  (eventbox :onhover "${eww} update brightness_reveal=true"
      :onhoverlost "${eww} update brightness_reveal=false"
    (box :class "module_2 icon" :space-evenly "false" :orientation "h" :spacing "3"
      (label :text ""
          :class "brightness_icon"
          :tooltip "brightness"
      )
      (revealer :transition "slideleft"
          :reveal brightness_reveal
          :duration "350ms"
        (scale :class "brightness_bar"
            :value brightness_percent
            :orientation "h"
            :tooltip "${brightness_percent}%"
            :max 100
            :min 0
            :width "100"
            :height "1"
            :onchange "brightnessctl set {}%"
        )
      )
    )
  )
)

;; Volume Widget ;;
(defwidget volume []
  (eventbox :onhover "${eww} update volume_reveal=true"
      :onhoverlost "${eww} update volume_reveal=false"
    (box :class "module" 
        :space-evenly false
        :orientation "h"
        :spacing "3"
      (button :onclick "./scripts/pop audio" ;; TODO: Popup Script
          :class "volume_icon icon"
          volume_icon
      )
      (revealer :transition "slideleft"
          :reveal volume_reveal
          :duration "350ms"
        (scale :class "volume_bar"
            :value volume_percent
            :orientation "h"
            :tooltip "${volume_percent}%"
            :max 100
            :min 0
            :width "100"
            :onchange "amixer -D default sset Master {}%"
        )
      )
    )
  )
)

;; Bluetooth Widget ;;
(defwidget bluetooth []
  (eventbox :onhover "${eww} update bluetooth_reveal=true"
      :onhoverlost "${eww} update bluetooth_reveal=false"
    (box :vexpand false :hexpand false :space-evenly false
      (button :class "bluetooth_module icon"
          :onclick "hyprctl dispatch 'exec blueman-manager'"
          :style "color: ${bluetooth_color};"
          bluetooth_icon
      )
      (revealer :transition "slideleft"
          :reveal bluetooth_reveal
          :duration "350ms"
        (label :class "device_module"
            :text bluetooth_device
            :orientation "h"
        )
      )
    )
  )
)

;; Wifi Widget ;;
(defwidget wifi []
  (eventbox :onhover "${eww} update wifi_reveal=true"
      :onhoverlost "${eww} update wifi_reveal=false"
    (box :vexpand false :hexpand false :space-evenly false
      (button :class "wifi_module icon"
          :style "color: ${wlan_color};"
          wlan_icon
      )
      (revealer :transition "slideleft"
          :reveal wifi_reveal
          :duration "350ms"
        (label :class "essid_module"
            :text wlan_essid
            :orientation "h"
        )
      )
    )
  ) 
)

;; Battery Widget ;;
(defwidget battery []
  (box :class "battery_module" :vexpand false :hexpand false
    (circular-progress :value battery_percent
        :class "battery_bar"
        :thickness 4
      (button
          :class "battery_icon icon"
          :tooltip "battery at ${battery_percent}%"
          :onclick "./scripts/pop system" ;; TODO: Popup Script
          ""
      )
    )
  )
)

;; Memory Widget ;;
(defwidget memory []
  (box :class "memory_module" :vexpand false :hexpand false
    (circular-progress :value memory_percent
        :class "memory_bar"
        :thickness 4
      (button 
          :class "memory_icon icon"
          :tooltip "using ${memory_percent}% ram"
          :onclick "./scripts/pop system" ;; TODO: Popup Script
          ""
      )
    )
  )
)

;; Clock Widget ;;
(defwidget clock []
  (eventbox :onhover "${eww} update clock_reveal=true"
      :onhoverlost "${eww} update clock_reveal=false"
    (box :class "module" :space-evenly false :orientation "h" :spacing "3"
      (label :text clock_hour :class "clock_hour_class")
      (label :text "󰇙" :class "clock_separator_class")
      (label :text clock_minute :class "clock_minute_class")
      (revealer :transition "slideleft"
          :reveal clock_reveal
          :duration "350ms"
        (button :class "clock_date_class"
            :onclick "./scripts/pop calendar" clock_date ;; TODO: Popup Script
        )
      )
    )
  )
)

;; ------ Popup Widget Definitions ------ ;;
;; Calendar Popup ;;
(defwidget custom-calendar []
	(box :class "calendar" :orientation "v"
    (box :class "calendar-inside-box"
      (calendar :class "calendar" 
          :day calendar_day 
          :year calendar_year
      )
    )
  )
)

;; System Popup ;;
(defwidget system []
  (box :class "system_module"
      :orientation "v"
      :space-evenly false
      :hexpand false
      :vexpand false
      :spacing 0
    (box :class "system_battery_box" :orientation "h" :space-evenly false
      (circular-progress :value battery_percent
          :class "system_battery"
          :thickness 9
        (label :text battery_icon
            :class "system_battery_icon icon"
            :limit-width 2
            :show_truncated false
            :wrap false
        )
      )
      (box :orientation "v" :space-evenly false :spacing 0 :hexpand false :vexpand false
        (label :text "battery"
            :halign "start"
            :class "system_battery_text"
            :limit-width 9
            :show_truncated false
            :wrap false
        )
        (label :text "${battery_percent}%"
            :halign "start"
            :class "system_battery_sub_text"
            :limit-width 22
            :show_truncated false
            :wrap false
        )
        (label :text "${battery_status}"
            :halign "start"
            :class "system_battery_sub_text"
            :limit-width 22
            :show_truncated false
            :wrap false
        )
      )
    )
    (label :text "" :class "system_separator" :halign "center")
    (box :class "system_memory_box" :orientation "h" :space-evenly false :halign "start"
      (circular-progress :value memory_percent
          :class "system_memory"
          :thickness 9
        (label :text ""
            :class "system_memory_icon icon"
            :limit-width 2
            :show_truncated false
            :wrap false
            :angle 0.0
        )
      )
      (box :orientation "v" :space-evenly false :spacing 0 :hexpand false :vexpand false
        (label :text "memory"
            :halign "start"
            :class "system_memory_text"
            :limit-width 9
            :show_truncated false
            :wrap false
        )
        (label :text "${memory_used_mb} / ${memory_total_mb} mb"
            :halign "start"
            :class "system_memory_sub_text"
            :limit-width 22
            :show_truncated false
            :wrap false
        )
        (label :text "${memory_free_mb} mb free"
            :halign "start"
            :class "system_memory_sub_text"
            :limit-width 22
            :show_truncated false
            :wrap false
        )
      )
    )
  )
)

;; ------ Popup Window Definitions ------ ;;
;; Calendar Popup Window ;;
(defwindow calendar
    :geometry (geometry
        :x "20px"
        :y "1%"
        :anchor "top right"
        :width "250px"
        :height "60px"
    )
    :monitor 0
  (custom-calendar)
)

;; System Popup Window ;;
(defwindow system
    :geometry (geometry
        :x "30px"
        :y "1%"
        :anchor "top right"
        :width "290px"
        :height "120px"
    )
    :monitor 0
  (system)
)

;; ------ Bar Sections ------ ;;
;; Left Widgets ;;
(defwidget left []
  (box :orientation "h" 
      :space-evenly false  
      :halign "start"
      :class "left_modules"
    (workspaces)
  )
)

(defwidget center []
  (box :orientation "h"
      :space-evenly false
      :halign "center"
      :class "center_modules"
    (window_title)
  )
)

;; Right Widgets ;;
(defwidget right []
  (box :orientation "h"
      :space-evenly false
      :halign "end"
      :class "right_modules"
    (brightness)
    (volume)
    (bluetooth)
    (wifi)
    (separator)
    (battery)
    (memory)
    (separator)
    (clock)
  )
)

;; Full Bar ;;
(defwidget bar []
  (box :class "eww_bar" 
    :orientation "h" 
    :vexpand "false" 
    :hexpand false
(left)
(center)
(right)))

;; ------ Windows ------ ;;
;; Bar Window ;;
(defwindow bar
  :geometry (geometry
      :x "0%"
      :y "9px"
      :width "122%"
      :height "30px"
      :anchor "top center"
  )
  :stacking "fg"
  :exclusive true
  :focusable false
  :windowtype "dock"
  :monitor 0
  (bar)
)
